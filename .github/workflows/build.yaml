# 将项目构建镜像并发布至 Docker Hub
name: CI to Docker Hub

# 在 Push 到 main 分支后启动该流程
on:
  schedule:
    - cron:  '30 8 * * 6'

  workflow_dispatch:

  push:
    branches:
      - main
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 在 GitHub Action 的服务器上 Check Out 源码（整体流程结束后会重置服务器环境因此不需要担心泄露）
      - name: Check Out Repo 
        uses: actions/checkout@v3

      # 设置 Buildx 为构建镜像做准备
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # 登录至 Docker Hub，账户密码需要在 Settings -> Secrets 中设置
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
      # 构建并发布（执行项目路径下的 Dockerfile 文件）
      - name: Build ubuntu22.04:latest and push
        id: latest
        uses: docker/build-push-action@v3
        with:
          context: ./Ubuntu-22.04
          file: ./Ubuntu-22.04/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ubuntu22.04:latest

      # 构建并发布（执行项目路径下的 Dockerfile 文件）
      - name: Build ubuntu22.04:openjdk17 and push
        id: openjdk17
        uses: docker/build-push-action@v3
        with:
          context: ./Ubuntu-22.04-Openjdk-17
          file: ./Ubuntu-22.04-Openjdk-17/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ubuntu22.04:openjdk-17

      # 构建并发布（执行项目路径下的 Dockerfile 文件）
      - name: Build ubuntu22.04:openjdk8 and push
        id: openjdk8
        uses: docker/build-push-action@v3
        with:
          context: ./Ubuntu-22.04-Openjdk-8
          file: ./Ubuntu-22.04-Openjdk-8/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ubuntu22.04:openjdk-8

      # 构建并发布（执行项目路径下的 Dockerfile 文件）
      # - name: Build ubuntu22.04:nginx and push
      #   id: nginx
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./Ubuntu-22.04-Nginx
      #     file: ./Ubuntu-22.04-Nginx/Dockerfile
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ubuntu22.04:nginx

      # 构建并发布（执行项目路径下的 Dockerfile 文件）
      - name: Build ubuntu22.04:python3-npm and push
        id: python3-npm
        uses: docker/build-push-action@v3
        with:
          context: ./Ubuntu-22.04-python3-npm
          file: ./Ubuntu-22.04-python3-npm/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ubuntu22.04:python3-npm

      # 完成
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: delete old workflows
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 2